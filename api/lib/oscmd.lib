#!/bin/ksh 
# File                   : oscmd.lib
# Created on             : 2012/02/22
# Family                 : OS 
# Purpose                : This file contains essentials generic functions to get informations about the state of the system.

# 1) Function               : load_custom_oslib 
# 1) Purpose                : Load the library containing custom functions depending of the current OS.
# 1) Notes		    : $API_OS must be set.
# 1) Version                : 1.0
# 1) Syntax                 : chk_availablespace
# 1) Optionals Parameters   : Nothing
# 1) Mandatories Parameters : Nothing
# 1) Example 1              : load_custom_oslib 
# 1) Return                 : 0=Library loaded, 1=No library for $API_OS, otherwise return code of initapi.
function load_custom_oslib {
case ${API_OS} in
	"aix")
		. initapi aix
		;;
	"linux")
		. initapi lin
		;;
	*)
		echo "Error, OS library not existing for OS : ${API_OS}."
		return 1
		;;
esac
return $?
}
# load_custom_oslib end

# 2) Function               : chk_availablespace
# 2) Purpose                : Verify that there is enough disk space in the specified directory.
# 2) Notes                  : You must specify a size of space memory wanted either in MB or in %.
# 2) Version                : 1.0
# 2) Syntax                 : chk_availablespace <directory> <memory space>
# 2) Optionals Parameters   : Nothing
# 2) Mandatories Parameters : <directory> and <memory space in MB or in %>
# 2) Example 1              : chk_availablespace /home/oracle 100MB
# 2) Example 2              : chk_availablespace /etc 20%
# 2) Return                 : 0=Sufficient space, 1=Miss space, 2=No unity expressed for the size of space memory wanted or 3=No existing function for OS.
function chk_availablespace {
	case ${API_OS} in
		"aix")
			aix_chk_availablespace "$1" "$2"
			;;
		"linux")
			lin_chk_availablespace "$1" "$2"
			;;
		*)
			echo "Error, function chk_availablespace not existing for OS : ${API_OS}."
			return 3
			;;
	esac
	return $?
}
# chk_availablespace end

# 3) Function               : fs_mount
# 3) Purpose                : Mount a file system.
# 3) Notes                  : Mount point must exist.
# 3) Version                : 1.0
# 3) Syntax                 : fs_mount <device> <mount point>
# 3) Optionals Parameters   : Nothing
# 3) Mandatories Parameters : <device> and <mount point>
# 3) Example 1              : fs_mount /dev/cdrom /mnt
# 3) Example 2              : fs_mount nfsserver:/exported/path /mnt
# 3) Return                 : -1= trying to mount on /, 0=fs mounted, 1=Device doesn't exist, 2=mount point doesn't exist or 3=No existing function for OS.
function fs_mount {
	case ${API_OS} in
		"aix")
			aix_fs_mount "$*"
			;;
		"linux")
			lin_fs_mount "$*"
			;;
		*)
			echo "Error: Function fs_mount not existing for OS: ${API_OS}."
			return 3
			;;
	esac
	return $?
}
# fs_mount end

# Include the current OS library
load_custom_oslib
